name: 01-FLUTTER-INSTALL
on:
  # pull_request:
  #   types: [closed]
  #   branches: [main]
  push:
    branches: [main]

jobs:
  flutter-masters-deploy-prod:
    runs-on: macos-latest
    env:
      public_variable: ${{vars.REGARD}}
      secret_variable: ${{secrets.PASSWORD}}
    steps:
      - name: INSTALLING JAVA
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: COPY .
        uses: actions/checkout@v4

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_DEV_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_CERTIFICATE_DEV_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: INSTALL FLUTTER
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # - name: FLUTTER TEST
      #   run: flutter test

      # - name: FLUTTER ANALYZE
      #   run: flutter analyze

      - name: CREATE ENV
        run: mkdir env

      - name: CREATE DEV.JSON
        run: echo '{"name":"${{vars.REGARD}}"}' > dev.json
        working-directory: env

      - name: FLUTTER GENERATE IPA
        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist --dart-define-from-file=env/dev.json

      - name: FLUTTER GENERATE APK
        run: flutter build apk --release  --dart-define-from-file=env/dev.json

      - name: UPLOAD APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-for-test
          path: |
            build/ios/ipa
            build/app/outputs/flutter-apk/app-release.apk

  # flutter-masters-deploy-dev:
  #   runs-on: macos-latest
  #   environment: "production"
  #   env:
  #     public_variable: ${{vars.REGARD}}
  #     secret_variable: ${{secrets.PASSWORD}}
  #   steps:
  #     - name: INSTALLING JAVA
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: "temurin"
  #         java-version: "11"

  #     - name: COPY .
  #       uses: actions/checkout@v4

  #     - name: INSTALL FLUTTER
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"

  #     - name: FLUTTER TEST
  #       run: flutter test

  #     - name: FLUTTER ANALYZE
  #       run: flutter analyze

  #     - name: CREATE ENV
  #       run: mkdir env

  #     - name: CREATE PROD.JSON
  #       run: echo '{"name":"${{vars.REGARD}}"}' > prod.json
  #       working-directory: env

  #     - name: FLUTTER GENERATE IPA
  #       run: flutter build ipa --no-codesign --dart-define-from-file=env/prod.json

  #     # - name: FLUTTER GENERATE IPA
  #     #   run: flutter build ipa --no-codesign --export-options-plist="build/ios/archive/Runner.xcarchive/info.plist"

  #     - name: UPLOAD IPA
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ipa-for-test
  #         path: build/ios/archive/
